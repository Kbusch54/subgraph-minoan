type AddCollateral @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AddLiquidity @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  amount: BigInt! # uint256
  newLoan: BigInt! # uint256
  addiotionalPositionSize: BigInt! # int256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClosePosition @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  closePrice: BigInt! # uint256
  closeTime: BigInt! # uint256
  pnl: BigInt! # int256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposit @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FfrAdjust @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  amount: BigInt! # int256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Liquidated @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewPosition @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  trader: Bytes! # address
  amm: Bytes! # address
  side: BigInt! # int256
  timeStamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OpenPosition @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  collateral: BigInt! # uint256
  loanAmt: BigInt! # uint256
  positionSize: BigInt! # int256
  entryPrice: BigInt! # uint256
  lastFundingRate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PayInterest @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  totalAmount: BigInt! # uint256
  amountToPool: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveCollateral @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveLiquidity @entity(immutable: true) {
  id: Bytes!
  tradeId: Bytes! # bytes
  positionSizeRemoved: BigInt! # int256
  amountOwed: BigInt! # int256
  usdcReturned: BigInt! # int256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
