// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddDebt extends ethereum.Event {
  get params(): AddDebt__Params {
    return new AddDebt__Params(this);
  }
}

export class AddDebt__Params {
  _event: AddDebt;

  constructor(event: AddDebt) {
    this._event = event;
  }

  get amm(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BorrowAmount extends ethereum.Event {
  get params(): BorrowAmount__Params {
    return new BorrowAmount__Params(this);
  }
}

export class BorrowAmount__Params {
  _event: BorrowAmount;

  constructor(event: BorrowAmount) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amm(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class InterestPeriodsSet extends ethereum.Event {
  get params(): InterestPeriodsSet__Params {
    return new InterestPeriodsSet__Params(this);
  }
}

export class InterestPeriodsSet__Params {
  _event: InterestPeriodsSet;

  constructor(event: InterestPeriodsSet) {
    this._event = event;
  }

  get _interestPeriods(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LoanInterestRateSet extends ethereum.Event {
  get params(): LoanInterestRateSet__Params {
    return new LoanInterestRateSet__Params(this);
  }
}

export class LoanInterestRateSet__Params {
  _event: LoanInterestRateSet;

  constructor(event: LoanInterestRateSet) {
    this._event = event;
  }

  get _loanInterestRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LoanPoolInitialized extends ethereum.Event {
  get params(): LoanPoolInitialized__Params {
    return new LoanPoolInitialized__Params(this);
  }
}

export class LoanPoolInitialized__Params {
  _event: LoanPoolInitialized;

  constructor(event: LoanPoolInitialized) {
    this._event = event;
  }

  get _ammPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _dao(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LoanPoolValues extends ethereum.Event {
  get params(): LoanPoolValues__Params {
    return new LoanPoolValues__Params(this);
  }
}

export class LoanPoolValues__Params {
  _event: LoanPoolValues;

  constructor(event: LoanPoolValues) {
    this._event = event;
  }

  get ammPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get minLoan(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get maxLoan(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get loanInterestRate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get loanInterestPeriod(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get mmr(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get minHoldingsReqPercentage(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get tradingFee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class MMRSet extends ethereum.Event {
  get params(): MMRSet__Params {
    return new MMRSet__Params(this);
  }
}

export class MMRSet__Params {
  _event: MMRSet;

  constructor(event: MMRSet) {
    this._event = event;
  }

  get _mmr(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MaxLoanSet extends ethereum.Event {
  get params(): MaxLoanSet__Params {
    return new MaxLoanSet__Params(this);
  }
}

export class MaxLoanSet__Params {
  _event: MaxLoanSet;

  constructor(event: MaxLoanSet) {
    this._event = event;
  }

  get _maxLoan(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MinAndMaxHoldingsReqPercentageSet extends ethereum.Event {
  get params(): MinAndMaxHoldingsReqPercentageSet__Params {
    return new MinAndMaxHoldingsReqPercentageSet__Params(this);
  }
}

export class MinAndMaxHoldingsReqPercentageSet__Params {
  _event: MinAndMaxHoldingsReqPercentageSet;

  constructor(event: MinAndMaxHoldingsReqPercentageSet) {
    this._event = event;
  }

  get _minHoldingsReqPercentage(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _maxHoldingsReqPercentage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MinAndMaxInterestPeriodsSet extends ethereum.Event {
  get params(): MinAndMaxInterestPeriodsSet__Params {
    return new MinAndMaxInterestPeriodsSet__Params(this);
  }
}

export class MinAndMaxInterestPeriodsSet__Params {
  _event: MinAndMaxInterestPeriodsSet;

  constructor(event: MinAndMaxInterestPeriodsSet) {
    this._event = event;
  }

  get _minInterestPeriods(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _maxInterestPeriods(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MinAndMaxInterestRateSet extends ethereum.Event {
  get params(): MinAndMaxInterestRateSet__Params {
    return new MinAndMaxInterestRateSet__Params(this);
  }
}

export class MinAndMaxInterestRateSet__Params {
  _event: MinAndMaxInterestRateSet;

  constructor(event: MinAndMaxInterestRateSet) {
    this._event = event;
  }

  get _minInterestRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _maxInterestRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MinAndMaxLoanSet extends ethereum.Event {
  get params(): MinAndMaxLoanSet__Params {
    return new MinAndMaxLoanSet__Params(this);
  }
}

export class MinAndMaxLoanSet__Params {
  _event: MinAndMaxLoanSet;

  constructor(event: MinAndMaxLoanSet) {
    this._event = event;
  }

  get _minLoan(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _maxLoan(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MinAndMaxMMRSet extends ethereum.Event {
  get params(): MinAndMaxMMRSet__Params {
    return new MinAndMaxMMRSet__Params(this);
  }
}

export class MinAndMaxMMRSet__Params {
  _event: MinAndMaxMMRSet;

  constructor(event: MinAndMaxMMRSet) {
    this._event = event;
  }

  get _minMMR(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _maxMMR(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MinAndMaxTradingFeeSet extends ethereum.Event {
  get params(): MinAndMaxTradingFeeSet__Params {
    return new MinAndMaxTradingFeeSet__Params(this);
  }
}

export class MinAndMaxTradingFeeSet__Params {
  _event: MinAndMaxTradingFeeSet;

  constructor(event: MinAndMaxTradingFeeSet) {
    this._event = event;
  }

  get _minTradingFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _maxTradingFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MinHoldingsReqPercentageSet extends ethereum.Event {
  get params(): MinHoldingsReqPercentageSet__Params {
    return new MinHoldingsReqPercentageSet__Params(this);
  }
}

export class MinHoldingsReqPercentageSet__Params {
  _event: MinHoldingsReqPercentageSet;

  constructor(event: MinHoldingsReqPercentageSet) {
    this._event = event;
  }

  get _minHoldingsReqPercentage(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MinLoanSet extends ethereum.Event {
  get params(): MinLoanSet__Params {
    return new MinLoanSet__Params(this);
  }
}

export class MinLoanSet__Params {
  _event: MinLoanSet;

  constructor(event: MinLoanSet) {
    this._event = event;
  }

  get _minLoan(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PayDebt extends ethereum.Event {
  get params(): PayDebt__Params {
    return new PayDebt__Params(this);
  }
}

export class PayDebt__Params {
  _event: PayDebt;

  constructor(event: PayDebt) {
    this._event = event;
  }

  get amm(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PayInterest extends ethereum.Event {
  get params(): PayInterest__Params {
    return new PayInterest__Params(this);
  }
}

export class PayInterest__Params {
  _event: PayInterest;

  constructor(event: PayInterest) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get lastPayed(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RepayLoan extends ethereum.Event {
  get params(): RepayLoan__Params {
    return new RepayLoan__Params(this);
  }
}

export class RepayLoan__Params {
  _event: RepayLoan;

  constructor(event: RepayLoan) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amm(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TradingFeeSet extends ethereum.Event {
  get params(): TradingFeeSet__Params {
    return new TradingFeeSet__Params(this);
  }
}

export class TradingFeeSet__Params {
  _event: TradingFeeSet;

  constructor(event: TradingFeeSet) {
    this._event = event;
  }

  get _tradingFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdateTheseus extends ethereum.Event {
  get params(): UpdateTheseus__Params {
    return new UpdateTheseus__Params(this);
  }
}

export class UpdateTheseus__Params {
  _event: UpdateTheseus;

  constructor(event: UpdateTheseus) {
    this._event = event;
  }

  get oldTheseus(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newTheseus(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LoanPool__interestOwedResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  get_totalInterest(): BigInt {
    return this.value0;
  }

  get_toPools(): BigInt {
    return this.value1;
  }
}

export class LoanPool__tradingFeeCalcResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getFeeToPool(): BigInt {
    return this.value0;
  }

  getFeeToDAO(): BigInt {
    return this.value1;
  }
}

export class LoanPool extends ethereum.SmartContract {
  static bind(address: Address): LoanPool {
    return new LoanPool("LoanPool", address);
  }

  borrow(
    _tradeId: Bytes,
    _ammPool: Address,
    _newLoan: BigInt,
    _tradeCollateral: BigInt
  ): boolean {
    let result = super.call(
      "borrow",
      "borrow(bytes,address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromBytes(_tradeId),
        ethereum.Value.fromAddress(_ammPool),
        ethereum.Value.fromUnsignedBigInt(_newLoan),
        ethereum.Value.fromUnsignedBigInt(_tradeCollateral)
      ]
    );

    return result[0].toBoolean();
  }

  try_borrow(
    _tradeId: Bytes,
    _ammPool: Address,
    _newLoan: BigInt,
    _tradeCollateral: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "borrow",
      "borrow(bytes,address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromBytes(_tradeId),
        ethereum.Value.fromAddress(_ammPool),
        ethereum.Value.fromUnsignedBigInt(_newLoan),
        ethereum.Value.fromUnsignedBigInt(_tradeCollateral)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  borrowedAmount(param0: Bytes): BigInt {
    let result = super.call(
      "borrowedAmount",
      "borrowedAmount(bytes):(uint256)",
      [ethereum.Value.fromBytes(param0)]
    );

    return result[0].toBigInt();
  }

  try_borrowedAmount(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "borrowedAmount",
      "borrowedAmount(bytes):(uint256)",
      [ethereum.Value.fromBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dao(param0: Address): Address {
    let result = super.call("dao", "dao(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_dao(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("dao", "dao(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  debt(param0: Address): BigInt {
    let result = super.call("debt", "debt(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_debt(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("debt", "debt(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  exchange(): Address {
    let result = super.call("exchange", "exchange():(address)", []);

    return result[0].toAddress();
  }

  try_exchange(): ethereum.CallResult<Address> {
    let result = super.tryCall("exchange", "exchange():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  interestForTrade(param0: Bytes): BigInt {
    let result = super.call(
      "interestForTrade",
      "interestForTrade(bytes):(uint256)",
      [ethereum.Value.fromBytes(param0)]
    );

    return result[0].toBigInt();
  }

  try_interestForTrade(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "interestForTrade",
      "interestForTrade(bytes):(uint256)",
      [ethereum.Value.fromBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  interestOwed(
    _tradeId: Bytes,
    _ammPool: Address
  ): LoanPool__interestOwedResult {
    let result = super.call(
      "interestOwed",
      "interestOwed(bytes,address):(uint256,uint256)",
      [ethereum.Value.fromBytes(_tradeId), ethereum.Value.fromAddress(_ammPool)]
    );

    return new LoanPool__interestOwedResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_interestOwed(
    _tradeId: Bytes,
    _ammPool: Address
  ): ethereum.CallResult<LoanPool__interestOwedResult> {
    let result = super.tryCall(
      "interestOwed",
      "interestOwed(bytes,address):(uint256,uint256)",
      [ethereum.Value.fromBytes(_tradeId), ethereum.Value.fromAddress(_ammPool)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanPool__interestOwedResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  interestPeriods(param0: Address): BigInt {
    let result = super.call(
      "interestPeriods",
      "interestPeriods(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_interestPeriods(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "interestPeriods",
      "interestPeriods(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  loanInterestLastPayed(param0: Bytes): BigInt {
    let result = super.call(
      "loanInterestLastPayed",
      "loanInterestLastPayed(bytes):(uint256)",
      [ethereum.Value.fromBytes(param0)]
    );

    return result[0].toBigInt();
  }

  try_loanInterestLastPayed(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "loanInterestLastPayed",
      "loanInterestLastPayed(bytes):(uint256)",
      [ethereum.Value.fromBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  loanInterestRate(param0: Address): BigInt {
    let result = super.call(
      "loanInterestRate",
      "loanInterestRate(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_loanInterestRate(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "loanInterestRate",
      "loanInterestRate(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxHoldingsReqPercentageLimit(): BigInt {
    let result = super.call(
      "maxHoldingsReqPercentageLimit",
      "maxHoldingsReqPercentageLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxHoldingsReqPercentageLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxHoldingsReqPercentageLimit",
      "maxHoldingsReqPercentageLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxInterestPeriodsLimit(): BigInt {
    let result = super.call(
      "maxInterestPeriodsLimit",
      "maxInterestPeriodsLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxInterestPeriodsLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxInterestPeriodsLimit",
      "maxInterestPeriodsLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxLoan(param0: Address): BigInt {
    let result = super.call("maxLoan", "maxLoan(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_maxLoan(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxLoan", "maxLoan(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxLoanInterestRateLimit(): BigInt {
    let result = super.call(
      "maxLoanInterestRateLimit",
      "maxLoanInterestRateLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxLoanInterestRateLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxLoanInterestRateLimit",
      "maxLoanInterestRateLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxLoanLimit(): BigInt {
    let result = super.call("maxLoanLimit", "maxLoanLimit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxLoanLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxLoanLimit", "maxLoanLimit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxMMRLimit(): BigInt {
    let result = super.call("maxMMRLimit", "maxMMRLimit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxMMRLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxMMRLimit", "maxMMRLimit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxTradingFeeLimit(): BigInt {
    let result = super.call(
      "maxTradingFeeLimit",
      "maxTradingFeeLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxTradingFeeLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxTradingFeeLimit",
      "maxTradingFeeLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minHoldingsReqPercentage(param0: Address): BigInt {
    let result = super.call(
      "minHoldingsReqPercentage",
      "minHoldingsReqPercentage(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_minHoldingsReqPercentage(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minHoldingsReqPercentage",
      "minHoldingsReqPercentage(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minHoldingsReqPercentageLimit(): BigInt {
    let result = super.call(
      "minHoldingsReqPercentageLimit",
      "minHoldingsReqPercentageLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minHoldingsReqPercentageLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minHoldingsReqPercentageLimit",
      "minHoldingsReqPercentageLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minInterestPeriodsLimit(): BigInt {
    let result = super.call(
      "minInterestPeriodsLimit",
      "minInterestPeriodsLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minInterestPeriodsLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minInterestPeriodsLimit",
      "minInterestPeriodsLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minLoan(param0: Address): BigInt {
    let result = super.call("minLoan", "minLoan(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_minLoan(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minLoan", "minLoan(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minLoanInterestRateLimit(): BigInt {
    let result = super.call(
      "minLoanInterestRateLimit",
      "minLoanInterestRateLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minLoanInterestRateLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minLoanInterestRateLimit",
      "minLoanInterestRateLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minLoanLimit(): BigInt {
    let result = super.call("minLoanLimit", "minLoanLimit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minLoanLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minLoanLimit", "minLoanLimit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minMMRLimit(): BigInt {
    let result = super.call("minMMRLimit", "minMMRLimit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minMMRLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minMMRLimit", "minMMRLimit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minTradingFeeLimit(): BigInt {
    let result = super.call(
      "minTradingFeeLimit",
      "minTradingFeeLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minTradingFeeLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minTradingFeeLimit",
      "minTradingFeeLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mmr(param0: Address): BigInt {
    let result = super.call("mmr", "mmr(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_mmr(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mmr", "mmr(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  payInterest(_tradeId: Bytes): boolean {
    let result = super.call("payInterest", "payInterest(bytes):(bool)", [
      ethereum.Value.fromBytes(_tradeId)
    ]);

    return result[0].toBoolean();
  }

  try_payInterest(_tradeId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("payInterest", "payInterest(bytes):(bool)", [
      ethereum.Value.fromBytes(_tradeId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  repayLoan(_tradeId: Bytes, _amount: BigInt, _ammPool: Address): boolean {
    let result = super.call(
      "repayLoan",
      "repayLoan(bytes,uint256,address):(bool)",
      [
        ethereum.Value.fromBytes(_tradeId),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_ammPool)
      ]
    );

    return result[0].toBoolean();
  }

  try_repayLoan(
    _tradeId: Bytes,
    _amount: BigInt,
    _ammPool: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "repayLoan",
      "repayLoan(bytes,uint256,address):(bool)",
      [
        ethereum.Value.fromBytes(_tradeId),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_ammPool)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  theseusDao(): Address {
    let result = super.call("theseusDao", "theseusDao():(address)", []);

    return result[0].toAddress();
  }

  try_theseusDao(): ethereum.CallResult<Address> {
    let result = super.tryCall("theseusDao", "theseusDao():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tradingFeeCalc(
    _amm: Address,
    _loanAmt: BigInt
  ): LoanPool__tradingFeeCalcResult {
    let result = super.call(
      "tradingFeeCalc",
      "tradingFeeCalc(address,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(_amm),
        ethereum.Value.fromUnsignedBigInt(_loanAmt)
      ]
    );

    return new LoanPool__tradingFeeCalcResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_tradingFeeCalc(
    _amm: Address,
    _loanAmt: BigInt
  ): ethereum.CallResult<LoanPool__tradingFeeCalcResult> {
    let result = super.tryCall(
      "tradingFeeCalc",
      "tradingFeeCalc(address,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(_amm),
        ethereum.Value.fromUnsignedBigInt(_loanAmt)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanPool__tradingFeeCalcResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  tradingFeeLoanPool(param0: Address): BigInt {
    let result = super.call(
      "tradingFeeLoanPool",
      "tradingFeeLoanPool(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_tradingFeeLoanPool(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tradingFeeLoanPool",
      "tradingFeeLoanPool(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _exchange(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddDebtCall extends ethereum.Call {
  get inputs(): AddDebtCall__Inputs {
    return new AddDebtCall__Inputs(this);
  }

  get outputs(): AddDebtCall__Outputs {
    return new AddDebtCall__Outputs(this);
  }
}

export class AddDebtCall__Inputs {
  _call: AddDebtCall;

  constructor(call: AddDebtCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddDebtCall__Outputs {
  _call: AddDebtCall;

  constructor(call: AddDebtCall) {
    this._call = call;
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get _tradeId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _newLoan(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _tradeCollateral(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class FullRepaymentFailedCall extends ethereum.Call {
  get inputs(): FullRepaymentFailedCall__Inputs {
    return new FullRepaymentFailedCall__Inputs(this);
  }

  get outputs(): FullRepaymentFailedCall__Outputs {
    return new FullRepaymentFailedCall__Outputs(this);
  }
}

export class FullRepaymentFailedCall__Inputs {
  _call: FullRepaymentFailedCall;

  constructor(call: FullRepaymentFailedCall) {
    this._call = call;
  }

  get _tradeId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _amm(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class FullRepaymentFailedCall__Outputs {
  _call: FullRepaymentFailedCall;

  constructor(call: FullRepaymentFailedCall) {
    this._call = call;
  }
}

export class InitializeVammCall extends ethereum.Call {
  get inputs(): InitializeVammCall__Inputs {
    return new InitializeVammCall__Inputs(this);
  }

  get outputs(): InitializeVammCall__Outputs {
    return new InitializeVammCall__Outputs(this);
  }
}

export class InitializeVammCall__Inputs {
  _call: InitializeVammCall;

  constructor(call: InitializeVammCall) {
    this._call = call;
  }

  get _amm(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _ariadneDao(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeVammCall__Outputs {
  _call: InitializeVammCall;

  constructor(call: InitializeVammCall) {
    this._call = call;
  }
}

export class PayInterestCall extends ethereum.Call {
  get inputs(): PayInterestCall__Inputs {
    return new PayInterestCall__Inputs(this);
  }

  get outputs(): PayInterestCall__Outputs {
    return new PayInterestCall__Outputs(this);
  }
}

export class PayInterestCall__Inputs {
  _call: PayInterestCall;

  constructor(call: PayInterestCall) {
    this._call = call;
  }

  get _tradeId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PayInterestCall__Outputs {
  _call: PayInterestCall;

  constructor(call: PayInterestCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RepayLoanCall extends ethereum.Call {
  get inputs(): RepayLoanCall__Inputs {
    return new RepayLoanCall__Inputs(this);
  }

  get outputs(): RepayLoanCall__Outputs {
    return new RepayLoanCall__Outputs(this);
  }
}

export class RepayLoanCall__Inputs {
  _call: RepayLoanCall;

  constructor(call: RepayLoanCall) {
    this._call = call;
  }

  get _tradeId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RepayLoanCall__Outputs {
  _call: RepayLoanCall;

  constructor(call: RepayLoanCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetInterestPeriodsCall extends ethereum.Call {
  get inputs(): SetInterestPeriodsCall__Inputs {
    return new SetInterestPeriodsCall__Inputs(this);
  }

  get outputs(): SetInterestPeriodsCall__Outputs {
    return new SetInterestPeriodsCall__Outputs(this);
  }
}

export class SetInterestPeriodsCall__Inputs {
  _call: SetInterestPeriodsCall;

  constructor(call: SetInterestPeriodsCall) {
    this._call = call;
  }

  get _interestPeriods(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetInterestPeriodsCall__Outputs {
  _call: SetInterestPeriodsCall;

  constructor(call: SetInterestPeriodsCall) {
    this._call = call;
  }
}

export class SetLoanInterestRateCall extends ethereum.Call {
  get inputs(): SetLoanInterestRateCall__Inputs {
    return new SetLoanInterestRateCall__Inputs(this);
  }

  get outputs(): SetLoanInterestRateCall__Outputs {
    return new SetLoanInterestRateCall__Outputs(this);
  }
}

export class SetLoanInterestRateCall__Inputs {
  _call: SetLoanInterestRateCall;

  constructor(call: SetLoanInterestRateCall) {
    this._call = call;
  }

  get _loanInterestRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetLoanInterestRateCall__Outputs {
  _call: SetLoanInterestRateCall;

  constructor(call: SetLoanInterestRateCall) {
    this._call = call;
  }
}

export class SetMMRCall extends ethereum.Call {
  get inputs(): SetMMRCall__Inputs {
    return new SetMMRCall__Inputs(this);
  }

  get outputs(): SetMMRCall__Outputs {
    return new SetMMRCall__Outputs(this);
  }
}

export class SetMMRCall__Inputs {
  _call: SetMMRCall;

  constructor(call: SetMMRCall) {
    this._call = call;
  }

  get _mmr(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetMMRCall__Outputs {
  _call: SetMMRCall;

  constructor(call: SetMMRCall) {
    this._call = call;
  }
}

export class SetMaxLoanCall extends ethereum.Call {
  get inputs(): SetMaxLoanCall__Inputs {
    return new SetMaxLoanCall__Inputs(this);
  }

  get outputs(): SetMaxLoanCall__Outputs {
    return new SetMaxLoanCall__Outputs(this);
  }
}

export class SetMaxLoanCall__Inputs {
  _call: SetMaxLoanCall;

  constructor(call: SetMaxLoanCall) {
    this._call = call;
  }

  get _maxLoan(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetMaxLoanCall__Outputs {
  _call: SetMaxLoanCall;

  constructor(call: SetMaxLoanCall) {
    this._call = call;
  }
}

export class SetMinAndMaxInterestPeriodsCall extends ethereum.Call {
  get inputs(): SetMinAndMaxInterestPeriodsCall__Inputs {
    return new SetMinAndMaxInterestPeriodsCall__Inputs(this);
  }

  get outputs(): SetMinAndMaxInterestPeriodsCall__Outputs {
    return new SetMinAndMaxInterestPeriodsCall__Outputs(this);
  }
}

export class SetMinAndMaxInterestPeriodsCall__Inputs {
  _call: SetMinAndMaxInterestPeriodsCall;

  constructor(call: SetMinAndMaxInterestPeriodsCall) {
    this._call = call;
  }

  get _minInterestPeriods(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxInterestPeriods(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinAndMaxInterestPeriodsCall__Outputs {
  _call: SetMinAndMaxInterestPeriodsCall;

  constructor(call: SetMinAndMaxInterestPeriodsCall) {
    this._call = call;
  }
}

export class SetMinAndMaxInterestRateCall extends ethereum.Call {
  get inputs(): SetMinAndMaxInterestRateCall__Inputs {
    return new SetMinAndMaxInterestRateCall__Inputs(this);
  }

  get outputs(): SetMinAndMaxInterestRateCall__Outputs {
    return new SetMinAndMaxInterestRateCall__Outputs(this);
  }
}

export class SetMinAndMaxInterestRateCall__Inputs {
  _call: SetMinAndMaxInterestRateCall;

  constructor(call: SetMinAndMaxInterestRateCall) {
    this._call = call;
  }

  get _minInterestRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxInterestRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinAndMaxInterestRateCall__Outputs {
  _call: SetMinAndMaxInterestRateCall;

  constructor(call: SetMinAndMaxInterestRateCall) {
    this._call = call;
  }
}

export class SetMinAndMaxLoanCall extends ethereum.Call {
  get inputs(): SetMinAndMaxLoanCall__Inputs {
    return new SetMinAndMaxLoanCall__Inputs(this);
  }

  get outputs(): SetMinAndMaxLoanCall__Outputs {
    return new SetMinAndMaxLoanCall__Outputs(this);
  }
}

export class SetMinAndMaxLoanCall__Inputs {
  _call: SetMinAndMaxLoanCall;

  constructor(call: SetMinAndMaxLoanCall) {
    this._call = call;
  }

  get _minLoan(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxLoan(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinAndMaxLoanCall__Outputs {
  _call: SetMinAndMaxLoanCall;

  constructor(call: SetMinAndMaxLoanCall) {
    this._call = call;
  }
}

export class SetMinAndMaxMMRCall extends ethereum.Call {
  get inputs(): SetMinAndMaxMMRCall__Inputs {
    return new SetMinAndMaxMMRCall__Inputs(this);
  }

  get outputs(): SetMinAndMaxMMRCall__Outputs {
    return new SetMinAndMaxMMRCall__Outputs(this);
  }
}

export class SetMinAndMaxMMRCall__Inputs {
  _call: SetMinAndMaxMMRCall;

  constructor(call: SetMinAndMaxMMRCall) {
    this._call = call;
  }

  get _minMMR(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxMMR(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinAndMaxMMRCall__Outputs {
  _call: SetMinAndMaxMMRCall;

  constructor(call: SetMinAndMaxMMRCall) {
    this._call = call;
  }
}

export class SetMinAndMaxMinHoldingsReqPercentageCall extends ethereum.Call {
  get inputs(): SetMinAndMaxMinHoldingsReqPercentageCall__Inputs {
    return new SetMinAndMaxMinHoldingsReqPercentageCall__Inputs(this);
  }

  get outputs(): SetMinAndMaxMinHoldingsReqPercentageCall__Outputs {
    return new SetMinAndMaxMinHoldingsReqPercentageCall__Outputs(this);
  }
}

export class SetMinAndMaxMinHoldingsReqPercentageCall__Inputs {
  _call: SetMinAndMaxMinHoldingsReqPercentageCall;

  constructor(call: SetMinAndMaxMinHoldingsReqPercentageCall) {
    this._call = call;
  }

  get _minMinHoldingsReqPercentage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxMinHoldingsReqPercentage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinAndMaxMinHoldingsReqPercentageCall__Outputs {
  _call: SetMinAndMaxMinHoldingsReqPercentageCall;

  constructor(call: SetMinAndMaxMinHoldingsReqPercentageCall) {
    this._call = call;
  }
}

export class SetMinAndMaxTradingFeeCall extends ethereum.Call {
  get inputs(): SetMinAndMaxTradingFeeCall__Inputs {
    return new SetMinAndMaxTradingFeeCall__Inputs(this);
  }

  get outputs(): SetMinAndMaxTradingFeeCall__Outputs {
    return new SetMinAndMaxTradingFeeCall__Outputs(this);
  }
}

export class SetMinAndMaxTradingFeeCall__Inputs {
  _call: SetMinAndMaxTradingFeeCall;

  constructor(call: SetMinAndMaxTradingFeeCall) {
    this._call = call;
  }

  get _minTradingFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxTradingFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinAndMaxTradingFeeCall__Outputs {
  _call: SetMinAndMaxTradingFeeCall;

  constructor(call: SetMinAndMaxTradingFeeCall) {
    this._call = call;
  }
}

export class SetMinHoldingsReqPercentageCall extends ethereum.Call {
  get inputs(): SetMinHoldingsReqPercentageCall__Inputs {
    return new SetMinHoldingsReqPercentageCall__Inputs(this);
  }

  get outputs(): SetMinHoldingsReqPercentageCall__Outputs {
    return new SetMinHoldingsReqPercentageCall__Outputs(this);
  }
}

export class SetMinHoldingsReqPercentageCall__Inputs {
  _call: SetMinHoldingsReqPercentageCall;

  constructor(call: SetMinHoldingsReqPercentageCall) {
    this._call = call;
  }

  get _minHoldingsReqPercentage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetMinHoldingsReqPercentageCall__Outputs {
  _call: SetMinHoldingsReqPercentageCall;

  constructor(call: SetMinHoldingsReqPercentageCall) {
    this._call = call;
  }
}

export class SetMinLoanCall extends ethereum.Call {
  get inputs(): SetMinLoanCall__Inputs {
    return new SetMinLoanCall__Inputs(this);
  }

  get outputs(): SetMinLoanCall__Outputs {
    return new SetMinLoanCall__Outputs(this);
  }
}

export class SetMinLoanCall__Inputs {
  _call: SetMinLoanCall;

  constructor(call: SetMinLoanCall) {
    this._call = call;
  }

  get _minLoan(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetMinLoanCall__Outputs {
  _call: SetMinLoanCall;

  constructor(call: SetMinLoanCall) {
    this._call = call;
  }
}

export class SetTheseusDaoCall extends ethereum.Call {
  get inputs(): SetTheseusDaoCall__Inputs {
    return new SetTheseusDaoCall__Inputs(this);
  }

  get outputs(): SetTheseusDaoCall__Outputs {
    return new SetTheseusDaoCall__Outputs(this);
  }
}

export class SetTheseusDaoCall__Inputs {
  _call: SetTheseusDaoCall;

  constructor(call: SetTheseusDaoCall) {
    this._call = call;
  }

  get _theseusDao(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTheseusDaoCall__Outputs {
  _call: SetTheseusDaoCall;

  constructor(call: SetTheseusDaoCall) {
    this._call = call;
  }
}

export class SetTradingFeeCall extends ethereum.Call {
  get inputs(): SetTradingFeeCall__Inputs {
    return new SetTradingFeeCall__Inputs(this);
  }

  get outputs(): SetTradingFeeCall__Outputs {
    return new SetTradingFeeCall__Outputs(this);
  }
}

export class SetTradingFeeCall__Inputs {
  _call: SetTradingFeeCall;

  constructor(call: SetTradingFeeCall) {
    this._call = call;
  }

  get _tradingFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetTradingFeeCall__Outputs {
  _call: SetTradingFeeCall;

  constructor(call: SetTradingFeeCall) {
    this._call = call;
  }
}

export class SubDebtCall extends ethereum.Call {
  get inputs(): SubDebtCall__Inputs {
    return new SubDebtCall__Inputs(this);
  }

  get outputs(): SubDebtCall__Outputs {
    return new SubDebtCall__Outputs(this);
  }
}

export class SubDebtCall__Inputs {
  _call: SubDebtCall;

  constructor(call: SubDebtCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ammPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SubDebtCall__Outputs {
  _call: SubDebtCall;

  constructor(call: SubDebtCall) {
    this._call = call;
  }
}

export class TradingFeeCalcCall extends ethereum.Call {
  get inputs(): TradingFeeCalcCall__Inputs {
    return new TradingFeeCalcCall__Inputs(this);
  }

  get outputs(): TradingFeeCalcCall__Outputs {
    return new TradingFeeCalcCall__Outputs(this);
  }
}

export class TradingFeeCalcCall__Inputs {
  _call: TradingFeeCalcCall;

  constructor(call: TradingFeeCalcCall) {
    this._call = call;
  }

  get _amm(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _loanAmt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TradingFeeCalcCall__Outputs {
  _call: TradingFeeCalcCall;

  constructor(call: TradingFeeCalcCall) {
    this._call = call;
  }

  get feeToPool(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get feeToDAO(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}
